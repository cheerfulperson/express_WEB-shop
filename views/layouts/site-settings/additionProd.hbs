<div id="main_block" class="block_manage_products">

    <form id="regForm" method="POST" action="/site-settings/production/addition-product">
        <!-- One "tab" for each step in the form: -->
        <div id="main" class="tab">
            <h2>Основная информациия</h2>
            <div class="category_selection">
                <select id="category" name="category">
                    <option value="null"></option>
                    {{#each categories}}
                    <option value="{{this.name}}">{{this.title}}</option>
                    {{/each}}
                </select>
            </div>
            <div id="typeSectionMenu" class="type_selection">
                {{#each categories}}
                <select class="type_selection_element hide" id="{{this.name}}" name="{{this.name}}">
                    <option value="null"></option>
                    {{#each this.submenuContent}}
                    <option value="{{this.name}}">{{this.title}}</option>
                    {{/each}}
                </select>
                {{/each}}
            </div>
            <div id="body">

            </div>
        </div>
        <div id="images" class="tab">
            <h2>Изображения</h2>
            <div id="body">

            </div>
        </div>
        <div id="generalInformation" class="tab">
            <h2>Главная информация</h2>
            <div id="body">

            </div>
        </div>
        <div id="description" class="tab">
            <h2>Описание</h2>
            <div id="body">

            </div>
        </div>
        <div class="block_footer">
            <div style="overflow:auto;">
                <div style="float:right;">
                    <button type="button" id="prevBtn" onclick="nextPrev(-1)">Назад</button>
                    <button type="button" id="nextBtn" onclick="nextPrev(1)">Далее</button>
                </div>
            </div>
            <!-- Circles which indicates the steps of the form: -->
            <div style="text-align:center;">
                <span class="step" onclick="showTab(0)"></span>
                <span class="step" onclick="showTab(1)"></span>
                <span class="step" onclick="showTab(2)"></span>
                <span class="step" onclick="showTab(3)"></span>
            </div>
        </div>
    </form>
</div>
<script>
    var currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab); // Display the crurrent tab

    function showTab(n) {
        // This function will display the specified tab of the form...
        var x = document.getElementsByClassName("tab");
        x[n].style.display = "block";
        //... and fix the Previous/Next buttons:
        if (n == 0) {
            document.getElementById("prevBtn").style.display = "none";
        } else {
            document.getElementById("prevBtn").style.display = "inline";
        }
        if (n == (x.length - 1)) {
            document.getElementById("nextBtn").innerHTML = "Отправить";
        } else {
            document.getElementById("nextBtn").innerHTML = "Далле";
        }
        //... and run a function that will display the correct step indicator:
        fixStepIndicator(n)
    }

    function nextPrev(n) {
        // This function will figure out which tab to display
        var x = document.getElementsByClassName("tab");
        // Exit the function if any field in the current tab is invalid:
        if (n == 1 && !validateForm()) return false;
        // Hide the current tab:
        x[currentTab].style.display = "none";
        // Increase or decrease the current tab by 1:
        currentTab = currentTab + n;
        // if you have reached the end of the form...
        if (currentTab >= x.length) {
            // ... the form gets submitted:
            document.getElementById("regForm").submit();
            return false;
        }
        // Otherwise, display the correct tab:
        showTab(currentTab);
    }

    function validateForm() {
        // This function deals with validation of the form fields
        return true;
    }

    function fixStepIndicator(n) {
        // This function removes the "active" class of all steps...
        var i, x = document.getElementsByClassName("step");
        for (i = 0; i < x.length; i++) {
            x[i].className = x[i].className.replace(" active", "");
        }
        //... and adds the "active" class on the current step:
        x[n].className += " active";
    }


    let mainBlock = document.getElementById('main_block');
    let blockFooter = document.querySelector('.block_footer');
    let categorySection = document.getElementById('category');
    let typeSectionMenu = document.getElementById('typeSectionMenu').querySelector('select');
    let currentId = "";

    function showSection(id) {
        if (id == "defold") {
            document.getElementById(currentId).classList.toggle('hide');
            return;
        }
        let mainBlock = document.getElementById(id).parentElement;
        for (let i = 0; i < mainBlock.children.length; i++) {
            let el = mainBlock.children[i];
            if (!el.classList.contains('hide')) el.classList.toggle('hide');
        }
        let element = document.getElementById(id);
        //if (element.classList.contains('hide')) element.classList.remove('hide'); // contains - поиск подкласса, remove - удаление подкласса, toggle - добавление в класс нового подкласса
        element.classList.remove('hide');
        currentId = id;
    }


    categorySection.addEventListener('change', (e) => {
        showSection(e.target.value);
    })
    // Функция отправки запроса:

    function showAndHide(parent, e) {
        let child;
        for (let i = 0; i < parent.children.length; i++) {
            let el = parent.children[i];
            if (el.classList.contains('show_and_hide')) child = el;

        }
        console.log(e.target.value)
        if (e.target.value == 'noHere' && child.classList.contains('hide')) child.classList.remove('hide');
        else if (!child.classList.contains('hide')) child.classList.toggle('hide');

    }
    function addOptions(el, info, key, name) {
        function getTitle(name, key) {
            if (name != undefined) return name;
            switch (key) {
                case 'type':
                    return "Тип продукта";
                case 'brand':
                    return "Имя бренда";
                case 'price':
                    return "Цена";
                case 'prodName':
                    return "Полное имя продукта";
                case 'availability':
                    return "Есть в наличии";
                default:
                    return key;
            }

        }
        let str;
        if (key == "price" || key == "prodName") {
            str = `
            <div id="${key}" class="info_product">
                <label for="${key}"><span>${getTitle(name, key)}</span></label>
                <div class="">
                    <input id="${key}" min="${key == "price" ? 0 : ""}" type="${key == "price" ? "number" : "text"}" name="${key}" placeholder="${key == "price" ? 320.2 : "IdeaPad 3 15IML05"}">
                </div>
                <hr>
            </div>
            `;
        } else if (key == "availability") {
            str = `
            <div id="${key}" class="info_product">
                <label class="switch" >
                    <span>${getTitle(name, key)}</span>
                    <input type="checkbox" name="${key}">
                    <span class="slider round"></span>
                </label>

                <hr>
            </div>`;
        } else  {
            if(info){
                str =   `<div id="${key}" class="info_product">
                            <label for="${key}"><span>${getTitle(name, key)}</span></label>
                            <select id="${key}" class="type_selection_element" name="${key}">
                                <option value="null"></option>
                                <option value="noHere">Нет в списке?</option>
                            </select>
                            <div class="show_and_hide hide">
                                <input id="new${key}" type="text" name="new${key}" placeholder="Введите свое">
                            </div>
                            <hr>
                        </div>`;
            } else {
                str = `<div id="${key}" class="info_product">
                             <label for="${key}"><span>${getTitle(name, key)}</span></label>
                            <div class="form_input">
                                <input id="new${key}" type="text" name="new${key}" placeholder="Введите свое">
                            </div>
                            <hr>
                        </div> `;
            }
        
        }
        el.insertAdjacentHTML("beforeEnd", str);
        let select = el.querySelector('div#' + key + ' select');

        if (info && select) {
            for (let i = 0; i < info.length; i++) {
                let option = document.createElement('option');
                option.innerText = info[i];
                option.value = info[i];
                select.children[0].after(option)
            }

           select.addEventListener('change', (e) => {
                 showAndHide(e.target.parentElement, e)
             })
        }
    }
    typeSectionMenu.addEventListener('change', (e) => {
        document.querySelectorAll('div#body').forEach(el => {el.innerHTML = ""})
        if(e.target.value) {
            let url = new URL(window.location.pathname + "/" + e.target.value, window.location.origin)

            getDataFromServer(url, "GET")
            .then(data => {
                let main = mainBlock.firstElementChild,
                    pat = data.defoldPattern,
                    comparePat = data.patternForCompare,
                    elementsBodies,
                    info;
                if(data.message){
                    document.querySelectorAll('div#body').forEach(el => {el.innerHTML = `<p><span style="color:red">${data.message}</span></p>`})
                }
                for (let key in pat) {
                    let el = pat[key];
                    if (key != 'prodName' && el == undefined || key == 'photos') continue;

                    if (key != "description" && key != "generalInformation")  addOptions(main.querySelector('#main div#body'), el, key);
                    else {
                        el = pat[key];
                        console.log(el)
                        for(let i in el){
                        
                            if(key == "generalInformation"){
                                info = comparePat[key][i] == undefined ? "" : comparePat[key][i].content;
                                addOptions(main.querySelector('#generalInformation div#body'), info, i, el[i].name);
                            }
                            else  if(key == "description"){
                                let 
                                partInElement = el[i],
                                div = document.createElement('div');

                                div.id = i;
                                div.className = "description_body_element";
                                div.innerHTML = '<h3>' + partInElement.name + '</h3>'
                                console.log(div)
                                main.querySelector('#description div#body').append(div);

                                for(let j in partInElement){
                                    info = partInElement[j] == undefined ? "" : partInElement[j].content;
                                    if(typeof partInElement[j] == 'object')addOptions(div, info, j, partInElement[j].name);
                                }
                                 
                            }
                        }
                    }
                }
                console.log(data)
                //addOptions(prodType, data.patternForCompare.type);
            })
            .catch(err => {
                console.error(err)
            })
        }
    })

    function onLoadElements() {
        mainBlock.style.minHeight = window.innerHeight - 80 + "px";
    }
    onLoadElements()
    window.addEventListener('resize', (e) => {
        onLoadElements()
    })
</script>
<style>
    .block_manage_products {
        width: 100%;
        box-sizing: border-box;
        padding: none;
        border: 2px solid #ccc;
        margin: auto;
        padding: 40px;
        min-width: 300px;
    }

    h1 {
        text-align: center;
    }

    input {
        padding: 10px;
        width: 100%;
        font-size: 17px;
        font-family: Raleway;
        border: 1px solid #aaaaaa;
    }

    /* Mark input boxes that gets an error on validation: */
    input.invalid {
        background-color: #ffdddd;
    }

    /* Hide all steps by default: */
    .tab {
        display: none;
    }

    button {
        background-color: #4CAF50;
        color: #ffffff;
        border: none;
        padding: 10px 20px;
        font-size: 17px;
        font-family: Raleway;
        cursor: pointer;
    }

    button:hover {
        opacity: 0.8;
    }

    #prevBtn {
        background-color: #bbbbbb;
    }

    .block_footer {
        position: relative;
        display: block;
    }

    /* Make circles that indicate the steps of the form: */
    .step {
        height: 15px;
        width: 15px;
        margin: 0 2px;
        background-color: #bbbbbb;
        border: none;
        border-radius: 50%;
        display: inline-block;
        opacity: 0.5;
    }

    .step.active {
        opacity: 1;
    }

    /* Mark the steps that are finished and valid: */
    .step.finish {
        background-color: #4CAF50;
    }

    .hide {
        display: none;
    }
</style>